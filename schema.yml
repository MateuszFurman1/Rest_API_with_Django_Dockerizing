openapi: 3.0.3
info:
  title: DRF_BLOG
  version: 0.0.0
paths:
  /api/:
    get:
      operationId: api_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
  /api/admin/create/:
    post:
      operationId: api_admin_create_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/admin/delete/{id}/:
    get:
      operationId: api_admin_delete_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: api_admin_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/admin/edit/{id}/:
    put:
      operationId: api_admin_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: api_admin_edit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/admin/edit/postdetail/{id}/:
    get:
      operationId: api_admin_edit_postdetail_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/post/{id}/:
    get:
      operationId: api_post_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/search/:
    get:
      operationId: api_search_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
  /api/user/create/:
    post:
      operationId: api_user_create_create
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          description: No response body
  /auth/convert-token/:
    post:
      operationId: auth_convert_token_create
      description: |-
        Implements an endpoint to convert a provider token to an access token

        The endpoint is used in the following flows:

        * Authorization code
        * Client credentials
      tags:
      - auth
      security:
      - {}
      responses:
        '200':
          description: No response body
  /auth/disconnect-backend/:
    post:
      operationId: auth_disconnect_backend_create
      description: An endpoint for disconnect social auth backend providers such as
        Facebook.
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /auth/invalidate-refresh-tokens/:
    post:
      operationId: auth_invalidate_refresh_tokens_create
      description: Invalidate all refresh tokens associated with a client id.
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /auth/invalidate-sessions/:
    post:
      operationId: auth_invalidate_sessions_create
      description: Delete all access tokens associated with a client id.
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /auth/revoke-token/:
    post:
      operationId: auth_revoke_token_create
      description: Implements an endpoint to revoke access or refresh tokens
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Implements an endpoint to provide access tokens

        The endpoint is used in the following flows:

        * Authorization code
        * Password
        * Client credentials
      tags:
      - auth
      security:
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    PatchedPost:
      type: object
      properties:
        category:
          type: integer
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 250
        image:
          type: string
          format: uri
        slug:
          type: string
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
        author:
          type: integer
        excerpt:
          type: string
          nullable: true
        content:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
    Post:
      type: object
      properties:
        category:
          type: integer
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 250
        image:
          type: string
          format: uri
        slug:
          type: string
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
        author:
          type: integer
        excerpt:
          type: string
          nullable: true
        content:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - author
      - content
      - id
      - slug
      - title
    StatusEnum:
      enum:
      - draft
      - published
      type: string
      description: |-
        * `draft` - Draft
        * `published` - Published
  securitySchemes:
    oauth2:
      type: oauth2
      flows: {}
